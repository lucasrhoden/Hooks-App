{"version":3,"sources":["components/UI/ErrorModal.js","components/UI/LoadingIndicator.js","components/UI/Card.js","components/Ingredients/IngredientForm.js","components/Ingredients/Search.js","components/Ingredients/IngredientList.js","components/Ingredients/Ingredients.js","App.js","index.js"],"names":["ErrorModal","React","memo","props","react_default","a","createElement","Fragment","className","onClick","onClose","children","type","LoadingIndicator","Card","IngredientForm","_useState","useState","_useState2","Object","slicedToArray","enteredTitle","setEnteredTitle","_useState3","_useState4","enteredAmount","setEnteredAmount","components_UI_Card","onSubmit","event","preventDefault","onAddIngredient","title","amount","htmlFor","id","value","onChange","target","loading","components_UI_LoadingIndicator","Search","enteredFilter","setEnteredFilter","onLoadIngredients","inputRef","useRef","useEffect","timer","setTimeout","current","query","length","concat","fetch","then","response","json","responseData","loadedIngredients","key","push","clearTimeout","ref","IngredientList","ingredients","map","ig","onRemoveItem","bind","ingredientReducer","currentIngredients","action","toConsumableArray","ingredient","filter","ing","Error","httpReducer","curHttpState","error","objectSpread2","errorMessage","Ingredients","_useReducer","useReducer","_useReducer2","userIngredients","dispatch","_useReducer3","_useReducer4","httpState","dispatchHttp","catch","filteredIngredientsHandler","useCallback","filteredIngredients","UI_ErrorModal","Ingredients_IngredientForm","method","body","JSON","stringify","headers","Content-Type","Ingredients_Search","components_Ingredients_IngredientList","ingredientId","App","react_router","path","exact","component","ReactDOM","render","react_router_dom","basename","process","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.45fb9ad2.chunk.js","sourcesContent":["import React from 'react';\n\nimport './ErrorModal.css';\n\nconst ErrorModal = React.memo(props => {\n  return (\n    <React.Fragment>\n      <div className=\"backdrop\" onClick={props.onClose} />\n      <div className=\"error-modal\">\n        <h2>An Error Occurred!</h2>\n        <p>{props.children}</p>\n        <div className=\"error-modal__actions\">\n          <button type=\"button\" onClick={props.onClose}>\n            Okay\n          </button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n});\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingIndicator.css';\n\nconst LoadingIndicator = () => (\n  <div className=\"lds-ring\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default LoadingIndicator;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\nexport default Card;\n","import React, { useState } from 'react';\nimport LoadingIndicator from \"../UI/LoadingIndicator\";\nimport Card from '../UI/Card';\nimport './IngredientForm.css';\n\nconst IngredientForm = React.memo(props => {\n  const [ enteredTitle, setEnteredTitle ] = useState(\"\");\n  const [ enteredAmount, setEnteredAmount ] = useState(\"\");\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onAddIngredient({title: enteredTitle, amount: enteredAmount});\n  };\n\n  return (\n    <section className=\"ingredient-form\">\n      <Card>\n        <form onSubmit={submitHandler}>\n          <div className=\"form-control\">\n            <label htmlFor=\"title\">Name</label>\n            <input \n              type=\"text\" \n              id=\"title\" \n              value={enteredTitle}\n              onChange={event => \n                setEnteredTitle (event.target.value)\n              }\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"amount\">Amount</label>\n            <input \n              type=\"number\" \n              id=\"amount\" \n              value={enteredAmount} \n              onChange={event => \n                setEnteredAmount(event.target.value)\n              }\n            />\n          </div>\n          <div className=\"ingredient-form__actions\">\n            <button type=\"submit\">Add Ingredient</button>\n            {props.loading ? <LoadingIndicator /> : null}\n          </div>\n        </form>\n      </Card>\n    </section>\n  );\n});\n\nexport default IngredientForm;\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport Card from '../UI/Card';\nimport './Search.css';\n\nconst Search = React.memo(props => {\n  const [ enteredFilter, setEnteredFilter ] = useState(\"\");\n  const { onLoadIngredients } = props;\n  const inputRef = useRef();\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      // setTimeout function to no send all the time the http request for the server.\n      if (enteredFilter === inputRef.current.value){\n        // enteredFilter in setTimeout is the old value. That why needs to use useRef to use the currente value.\n        const query = \n          enteredFilter.length === 0\n          ? \"\"\n          : `?orderBy=\"title\"&equalTo=\"${enteredFilter}\"`;\n        fetch(\"https://react-hooks-72dd3.firebaseio.com/ingredients.json\" + query)\n          .then(response => response.json())\n          .then(responseData => {\n            const loadedIngredients = [];\n            for (const key in responseData) {\n              loadedIngredients.push({\n              id: key,\n              title: responseData[key].title,\n              amount: responseData[key].amount\n            });\n          }\n        onLoadIngredients(loadedIngredients)\n        });\n      }\n    }, 500);\n    return () => {\n      // clear the Timeout to only have the time of the latest value.\n      clearTimeout(timer);\n    };\n  }, [enteredFilter, onLoadIngredients])\n\n  return (\n    <section className=\"search\">\n      <Card>\n        <div className=\"search-input\">\n          <label>Filter by Title</label>\n          <input\n            ref={inputRef} \n            type=\"text\" \n            value={enteredFilter} \n            onChange={event => setEnteredFilter(event.target.value)} />\n        </div>\n      </Card>\n    </section>\n  );\n});\n\nexport default Search;\n","import React from 'react';\n\nimport './IngredientList.css';\n\nconst IngredientList = props => {\n  return (\n    <section className=\"ingredient-list\">\n      <h2>Loaded Ingredients</h2>\n      <ul>\n        {props.ingredients.map(ig => (\n          <li key={ig.id} onClick={props.onRemoveItem.bind(this, ig.id)}>\n            <span>{ig.title}</span>\n            <span>{ig.amount}x</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default IngredientList;\n","import React, { useEffect, useCallback, useReducer } from 'react';\nimport ErrorModal from \"../UI/ErrorModal\";\nimport IngredientForm from './IngredientForm';\nimport Search from './Search';\nimport IngredientList from \"./IngredientList\";\n\nconst ingredientReducer = (currentIngredients, action) => {\n  switch (action.type) {\n    case \"SET\":\n      return action.ingredients;\n    case \"ADD\":\n      return [...currentIngredients, action.ingredient];\n    case \"DELETE\":\n      return currentIngredients.filter(ing => ing.id !== action.id);\n    default:\n      throw new Error(\"Should not get there\")\n  }\n}\n\nconst httpReducer = (curHttpState, action) => {\n  switch(action.type) {\n    case \"SEND\":\n      return { loading: true, error: null}\n    case \"RESPONSE\":\n      return {...curHttpState, loading: false}\n    case \"ERROR\":\n      return { loading: false, error: action.errorMessage}\n    case \"CLEAR\":\n      return { ...curHttpState, error: null}\n    default:\n      throw new Error(\"Should not be reached!\")\n  }\n}\n\nfunction Ingredients() {\n  // const [ userIngredients, setUserIngredients ] = useState([]);\n  const [ userIngredients, dispatch] = useReducer(ingredientReducer, []);\n  const [ httpState, dispatchHttp ] = useReducer (httpReducer, { loading: false, error: null })\n  // const [ isLoading, setIsLoading] = useState(null);\n  // const [ error, setError ] = useState();\n\n  useEffect(() => {\n    dispatchHttp({type:\"SEND\"});\n    fetch(\"https://react-hooks-72dd3.firebaseio.com/ingredients.json\")\n      .then(response => response.json())\n      .then(responseData => {\n        dispatchHttp({type:\"RESPONSE\"});\n        const loadedIngredients = [];\n        for (const key in responseData) {\n          loadedIngredients.push({\n            id: key,\n            title: responseData[key].title,\n            amount: responseData[key].amount\n          });\n        }\n        dispatch({type: \"SET\", ingredients: loadedIngredients})\n      })\n      .catch(error => {\n        dispatchHttp({type:\"ERROR\", errorMessage: \"Something went wrong!\"});\n      });\n      // [] to use useEffect like componentDidMount. Otherwhise will be componentDidUpdate\n  }, []);\n\n  const filteredIngredientsHandler = useCallback(filteredIngredients => {\n    dispatch({type: \"SET\", ingredients: filteredIngredients})\n  }, []);\n \n  const addIngredientsHandler = ingredient => {\n    dispatchHttp({type:\"SEND\"});\n    fetch(\"https://react-hooks-72dd3.firebaseio.com/ingredients.json\", {\n      method: \"POST\",\n      body: JSON.stringify(ingredient),\n      headers: { \"Content-Type\": \"application/json\" }\n    }).then(response => {\n      return response.json();\n    }).then(responseData => {\n      dispatchHttp({type:\"RESPONSE\"});\n      dispatch({type:\"ADD\", ingredient: ingredient})\n    }).catch(error => {\n      dispatchHttp({type:\"ERROR\", errorMessage: \"Something went wrong!\"});\n    });\n  };\n\n  const removeIngredientHandler = ingredientId => {\n    dispatchHttp({type:\"SEND\"});\n    fetch(\n      `https://react-hooks-72dd3.firebaseio.com/ingredients/${ingredientId}.json`, {\n        method: 'DELETE'\n      })\n      .then(response => {\n        dispatchHttp({type:\"RESPONSE\"});\n      dispatch({type:\"DELETE\", id: ingredientId})\n      })\n    .catch(error => {\n      dispatchHttp({type:\"ERROR\", errorMessage: \"Something went wrong!\"});\n    });\n  };\n\n  const closeError = () => {\n    dispatchHttp({type: \"CLEAR\"})\n  }\n\n  return (\n    <div className=\"App\">\n      {httpState.error ? <ErrorModal onClose={closeError}>{httpState.error}</ErrorModal> : null}\n      <IngredientForm onAddIngredient={addIngredientsHandler} loading={httpState.loading}/>\n\n      <section>\n        <Search onLoadIngredients={filteredIngredientsHandler} />\n        <IngredientList ingredients={userIngredients} onRemoveItem={removeIngredientHandler}/>\n      </section>\n    </div>\n  );\n}\n\nexport default Ingredients;\n","import React from 'react';\nimport { Route } from 'react-router-dom'\nimport Ingredients from './components/Ingredients/Ingredients';\n\nconst App = props => {\n  return <Route path=\"/\" exact component={Ingredients} />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}><App /></BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}